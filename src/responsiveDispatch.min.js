/*
    ResponsiveDispatch v0.1.0 - https://github.com/nmartin413/ResponsiveDispatch

    requires jQuery, Backbone
*/

(function(n,t){if(!n)throw"jQuery not defined";if(!t)throw"Backbone not defined";(function(n){function s(){h(),_(i.ranges).each(function(n){var t=n.isInCurrent(),i=n.hasBeenInRange;t&&!i&&n.fireEntr(),!t&&i&&n.fireExit()})}function a(){_(i.ranges).each(function(n){n.hasBeenInRange=!1}),s()}function v(){h(),_(i.ranges).each(function(n){n.isInCurrent()&&n.fireEntr()})}function h(){lastWidth=i.currWidth,o=n(window).width()}function y(n,t){var i=n>t.min,r=n<t.max;return i&&r?!0:!1}function p(n){e=n.ranges,f=n.logging||!1,i.initRanges()}var f=!1,e=[],c="didEnter:",l="didExit:",o=0,r=function(n){this.name=n.name,this.min=n.min,this.max=n.max,this.hasBeenInRange=!1},u,i;r.prototype.isInCurrent=function(){return y(o,this)},r.prototype.fireEntr=function(){this.hasBeenInRange=!0,i.trigger(c+this.name)},r.prototype.fireExit=function(){this.hasBeenInRange=!1,i.trigger(l+this.name)},u=function(){},u.prototype=[],u.prototype.inCurrentRange=function(){return _(this).filter(function(n){return n.isInCurrent()})},i=_(t.Events).clone(),i.initRanges=function(){i.ranges=new u,_(e).each(function(n){i.ranges.push(new r(n))})};i.on("all",function(n){f&&console.log("responsiveDispatch triggered : "+n)});(function(t){t.forceEmit=a,t.init=p,n(window).resize(s),window.responsiveDispatch=t,n(window).load(v)})(i)})(n)})(jQuery,Backbone);